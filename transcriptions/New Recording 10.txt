 60% off and Klein Tommy Hilfiger style. Um, let's see. The Junior Developer. So, maybe I'll expand the My Stories section a little bit more, but, like, I don't know if it'll hurt my credibility. that's more like the job searching section so I just want like general advice for the coding bootcamp graduate in the process of learning software so one thing that a lot of people think is that even if you can find a solution to a problem you'll be like oh my god I don't know if this is the right way to do it. I don't know if I'm solving it the right way. But I would say that getting a working solution is probably 80% of the way there. And once you can, you know, get a working solution, you'll be able to understand why a different working solution might be better. Algorithmic thinking. just don't obsess with like whether you're right or wrong or good or bad i remember when i was under pressure to like what am i going to publish what am i going to publish to my github oh is my github any good i don't know if my github is any good at all and who cares like i also remember like obsessing over like god i didn't even write this like this is basically something that was just written for me like at the at the github or the this was basically given to me wholesale by my code and boot camp like why the hell should i do this or why the hell would anyone be impressed by this so like i felt like it would be cheating for me to like highlight this stuff. Even if, you know, like people, you have to understand, like you have to overcome your like innate feeling of unworthiness. You innately feel like you don't deserve a job. Like there's better candidates out there. Who cares? Maybe that's true. Maybe it's not, uh, your job. Well, you don't have a job yet, but your goal is to get a job no matter what. The difference between being unemployed and being employed is massive. When you're employed, you have something to do. You're able to exaggerate that experience later on. You're getting paid. Being able to get any job, even a starter job, was amazing. When I had my first job, it was like, um, well, I followed kind of a winding path, but I never would have been chosen for that prestigious, like big tech company fellowship, uh, or internship, which paid a good amount of money if I hadn't had that first job. So, I mean, I effectively doubled the amount of money that I made by accepting that internship. Um, but if I didn't take that first job, you know, if I turned my nose up at him and been like, oh that's a really old company with a very old uncool programming language why the heck would i want to work there i never would have gotten the big tech internship like one thing necessarily builds into another thing the most important thing for you is to have live demos live demos of really any kind so you want to show the code i would think show the code that you've written um you know write a blog post describing the project highlighting you know like the technical challenges like you know the the design the architectural decisions that you made um for example like uh and then you know you want to have a live version of the app deployed and honestly if you can do like a full stack app that like has Full stack basically means HTML, JavaScript, server, database. That's it. And then you want to like thread the data through there to achieve create read update destroy functionality That's what I've always said. Create, read, update, destroy. So yeah, it needs to do that. And the project domain, it can be something incredibly simple. it can be something incredibly um it can be incredibly you know like recipes i met a lot of people who used like a recipe apps i met a guy who did like a smash brothers like like a smash brothers like ranking like he collected a lot of statistics about smash brothers players and you know that got him a really good job at a bank like these passion projects are really valuable and the skills you learn on these passion projects are really valuable my own passion project i had a friend who was like very into my mentor in the tech industry was someone who was very interested in how much money he made um you know at a big tech company and so he asked me to do statistical analysis to turn to determine exactly what percentile of compared to people who went to college in his year, um, what percentile he ranked into, which is cool. You know, like, uh, the one thing that I love about software engineering is really data science. Data science is, I would say it's like one of my real passions, uh, with regard to being a backend engineer. I love the, I love the data. I love the database. I love the scientific method. I love coming up with innovative techniques to, you know, get the data and, you know, make meaningful determinations based on the data. In fact, this is something that, you know, if ever there's like a, there's a tricky query to be run, I am the go-to guy who loves to get his hands dirty with the tricky or difficult query with regard to our database. That is what I do. Um, yeah, so I definitely want to have like a data science chapter. So I think like for the like learning software engineering section, I'm going to be able to put all of my pet projects and my pet data and you know, the Pokemon thing, the fucking, uh, the Pokemon challenges, working with APIs, front end, like, put some of that stuff in, and I can also put code examples in, like, ChatGPT will just fucking write the code examples for me. Yeah, when it comes to different programming languages, like, basically, they can be categorized thusly. Compiled strict typing. Um, uh, front end JavaScript frameworks, web development frameworks. Um, and then probably true programming, which is, uh, you know, like low level. I, I've never done any like true programming, so I don't really feel qualified to talk about it. If that's what your passion is, like getting a job as a web developer will give you like there's a base level set of programming skills that you can get. Like, these include things like debugging, writing loops, writing conditionals, running code. These base level skills, which, by the way, most people do not know how to do this kind of stuff. these base level skills will make it so that once you can like, you know, even if there's a very big difference between working as, you know, a junior developer, you know, web development, like role, like you're just doing something like that, you still, I mean, let's say your dream is to, go write video games in Unity over at Valve. Being a junior developer being a junior web developer is still to be a better preparation for you to be um you know a you know a unity developer at valve i heard people complain about getting typecast like i don't know if that's really true for me i always liked ruby on rails because it's just incredibly pleasant to use the the role that you have as a ruby on rails engineer is much different than the role that you have as a node engineer. But yeah, so research. Spanning. Headless Selenium Browser It got me this job Yeah, my Headless Selenium Browser It got me both of my jobs My little, my little spam bot Whosoever bindeth to himself a joy Doth its winged light destroy I should write my spam bots that I can remove people of certain backgrounds from my fucking, from my fucking LinkedIn. Anyone who's not American, anyone, I wish I could make it so I could easily determine a fake profile. Like, how do you determine a good profile versus a bad profile that's the exact kind of thing that a machine learning algorithm should be able to do like i have a lot of people on my linkedin who are bad but i should probably parse the data like parse the data so that it would just be like professional history and name and then maybe like residence and then i would just train the algorithm like without asking any questions about what it does to say like these 1,000, well, these 500 examples are bad. These 500 examples are good. And then just see how the algorithm categorizes it. And that way I would be able to use, this is the kind of thing I could have never talked about because it is a kind of derogatory kind of, you know, not kosher, but yeah. So. Learning software engineering. Yeah, now I'll be able to write a really good chapter on working with APIs. I'm going to need to have a different example than the Pokemon API. but yeah i'll just present the problems and then i'll present the solutions in the following chapter that way i will encourage them encourage the the user to be able to do it and i do need to write a chapter about ChatGPT. Yeah. An irreverent guide. I have drank so much fucking water today. I have drank more water than I almost never drank before. there's just there's something so gratifying about being able to say stuff and see it show up on a computer i don't know i don't know what it is uh i could automate that step of the process but it's like why you know you have to have to ask yourself the i could automate where i send an email like that contains the audio file and i could have to automatically download it and reformat it and put it into the correct file. Like, why the hell would I do that? What's the point? There should probably be a chapter on customizing your... customizing your development environment so my hope is that this book will be generally applicable but it also will the brake not good yeah so I have a lot to share and I Allie was like oh Mark well don't be sad if it doesn't sell and I was like Allie it does not matter to me if it sells for me successful means seeing my book published in the Kindle store. That's it. If it doesn't sell, it doesn't sell. But this is something, it's all worked out. So, Spambot. Sharing my techniques. Yeah, I love spamming. I'll write a chapter about spamming. Unfortunately, I got an IP level bad from Okay, cute bird. A long time ago. Utterly undiscerning. Yeah, yeah, I like it out here. Um, let's see. So, Mark McGowan. Where's Mark McGowan? Which bathroom is the best? I kind of feel like going to the Best Buy bathroom just because of... Yeah, I mean there's this really complicated process. I haven't been out here in a while. In fact, my phone will tell me the last time I've been out here. I don't think I've been out here in like two fucking weeks. Shit. I think Baldur's Gate is the reason I haven't been out here. There, you know, a well-preserved older gentleman riding his bike. Um... So... Yeah. Puto Madre. You must learn to work with different APIs. Yeah, so bare minimum HTML and CSS. Then CSS framework. Then inline JavaScript. It's pretty rudimentary. Maybe I can take the material in this boat. No, it doesn't fucking matter. Like, I don't know what this guy's doing. Oh, I had my blinker on. I feel like a moron now. Um, yeah, that's what you get doing two things at once, I guess. Let's see if the fucking garden center... Oh, he took a piss. I've never been to this garden center before. Surely they'll have a bathroom here, right? Yeah, let's put this fucking down. Oh, he's a nice little phone. Beautiful. Beautiful.